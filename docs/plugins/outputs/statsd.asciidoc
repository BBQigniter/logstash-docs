[[plugins-outputs-statsd]]
=== statsd

* Version: 3.1.1
* Released on: 2016-07-14
* https://github.com/logstash-plugins/logstash-output-statsd/blob/master/CHANGELOG.md#311[Changelog]



statsd is a network daemon for aggregating statistics, such as counters and timers,
and shipping over UDP to backend services, such as Graphite or Datadog. The general
idea is that you send metrics to statsd and every few seconds it will emit the
aggregated values to the backend. Example aggregates are sums, average and maximum
values, their standard deviation, etc. This plugin makes it easy to send such
metrics based on data in Logstash events.

You can learn about statsd here:

* https://codeascraft.com/2011/02/15/measure-anything-measure-everything/[Etsy blog post announcing statsd]
* https://github.com/etsy/statsd[statsd on github]

Typical examples of how this can be used with Logstash include counting HTTP hits
by response code, summing the total number of bytes of traffic served, and tracking
the 50th and 95th percentile of the processing time of requests.

Each metric emitted to statsd has a dot-separated path, a type, and a value. The
metric path is built from the `namespace` and `sender` options together with the
metric name that's picked up depending on the type of metric. All in all, the
metric path will follow this pattern:

    namespace.sender.metric

With regards to this plugin, the default namespace is "logstash", the default
sender is the `host` field, and the metric name depends on what is set as the
metric name in the `increment`, `decrement`, `timing`, `count`, `set` or `gauge`
options. In metric paths, colons (":"), pipes ("|") and at signs ("@") are reserved
and will be replaced by underscores ("_").

Example:
[source,ruby]
output {
  statsd {
    host => "statsd.example.org"
    count => {
      "http.bytes" => "%{bytes}"
    }
  }
}

If run on a host named hal9000 the configuration above will send the following
metric to statsd if the current event has 123 in its `bytes` field:

    logstash.hal9000.http.bytes:123|c

&nbsp;

==== Synopsis

This plugin supports the following configuration options:

Required configuration options:

[source,json]
--------------------------
statsd {
}
--------------------------



Available configuration options:

[cols="<,<,<,<m",options="header",]
|=======================================================================
|Setting |Input type|Required|Default value
| <<plugins-outputs-statsd-codec>> |<<codec,codec>>|No|`"plain"`
| <<plugins-outputs-statsd-count>> |<<hash,hash>>|No|`{}`
| <<plugins-outputs-statsd-decrement>> |<<array,array>>|No|`[]`
| <<plugins-outputs-statsd-enable_metric>> |<<boolean,boolean>>|No|`true`
| <<plugins-outputs-statsd-gauge>> |<<hash,hash>>|No|`{}`
| <<plugins-outputs-statsd-host>> |<<string,string>>|No|`"localhost"`
| <<plugins-outputs-statsd-id>> |<<string,string>>|No|
| <<plugins-outputs-statsd-increment>> |<<array,array>>|No|`[]`
| <<plugins-outputs-statsd-namespace>> |<<string,string>>|No|`"logstash"`
| <<plugins-outputs-statsd-port>> |<<number,number>>|No|`8125`
| <<plugins-outputs-statsd-sample_rate>> |<<number,number>>|No|`1`
| <<plugins-outputs-statsd-sender>> |<<string,string>>|No|`"%{host}"`
| <<plugins-outputs-statsd-set>> |<<hash,hash>>|No|`{}`
| <<plugins-outputs-statsd-timing>> |<<hash,hash>>|No|`{}`
| <<plugins-outputs-statsd-workers>> |<<,>>|No|`1`
|=======================================================================


==== Details

&nbsp;

[[plugins-outputs-statsd-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"plain"`

The codec used for output data. Output codecs are a convenient method for encoding your data before it leaves the output, without needing a separate filter in your Logstash pipeline.

[[plugins-outputs-statsd-count]]
===== `count` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

A count metric. `metric_name => count` as hash. `%{fieldname}` substitutions are
allowed in the metric names.

[[plugins-outputs-statsd-decrement]]
===== `decrement` 

  * Value type is <<array,array>>
  * Default value is `[]`

A decrement metric. Metric names as array. `%{fieldname}` substitutions are
allowed in the metric names.

[[plugins-outputs-statsd-enable_metric]]
===== `enable_metric` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Disable or enable metric logging for this specific plugin instance
by default we record all the metrics we can, but you can disable metrics collection
for a specific plugin.

[[plugins-outputs-statsd-gauge]]
===== `gauge` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

A gauge metric. `metric_name => gauge` as hash. `%{fieldname}` substitutions are
allowed in the metric names.

[[plugins-outputs-statsd-host]]
===== `host` 

  * Value type is <<string,string>>
  * Default value is `"localhost"`

The hostname or IP address of the statsd server.

[[plugins-outputs-statsd-id]]
===== `id` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a unique `ID` to the plugin configuration. If no ID is specified, Logstash will generate one. 
It is strongly recommended to set this ID in your configuration. This is particularly useful 
when you have two or more plugins of the same type, for example, if you have 2 grok filters. 
Adding a named ID in this case will help in monitoring Logstash when using the monitoring APIs.

[source,ruby]
---------------------------------------------------------------------------------------------------
output {
 stdout {
   id => "my_plugin_id"
 }
}
---------------------------------------------------------------------------------------------------


[[plugins-outputs-statsd-increment]]
===== `increment` 

  * Value type is <<array,array>>
  * Default value is `[]`

An increment metric. Metric names as array. `%{fieldname}` substitutions are
allowed in the metric names.

[[plugins-outputs-statsd-namespace]]
===== `namespace` 

  * Value type is <<string,string>>
  * Default value is `"logstash"`

The statsd namespace to use for this metric. `%{fieldname}` substitutions are
allowed.

[[plugins-outputs-statsd-port]]
===== `port` 

  * Value type is <<number,number>>
  * Default value is `8125`

The port to connect to on your statsd server.

[[plugins-outputs-statsd-sample_rate]]
===== `sample_rate` 

  * Value type is <<number,number>>
  * Default value is `1`

The sample rate for the metric.

[[plugins-outputs-statsd-sender]]
===== `sender` 

  * Value type is <<string,string>>
  * Default value is `"%{host}"`

The name of the sender. Dots will be replaced with underscores. `%{fieldname}`
substitutions are allowed.

[[plugins-outputs-statsd-set]]
===== `set` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

A set metric. `metric_name => "string"` to append as hash. `%{fieldname}`
substitutions are allowed in the metric names.

[[plugins-outputs-statsd-timing]]
===== `timing` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

A timing metric. `metric_name => duration` as hash. `%{fieldname}` substitutions
are allowed in the metric names.

[[plugins-outputs-statsd-workers]]
===== `workers` 

  * Value type is <<string,string>>
  * Default value is `1`

TODO remove this in Logstash 6.0
when we no longer support the :legacy type
This is hacky, but it can only be herne


