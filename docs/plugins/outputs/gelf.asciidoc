[[plugins-outputs-gelf]]
=== gelf

* Version: 3.1.2
* Released on: 2016-11-14
* https://github.com/logstash-plugins/logstash-output-gelf/blob/master/CHANGELOG.md#312[Changelog]



NOTE: This plugin does not ship with Logstash by default, but it is easy to install by running `bin/logstash-plugin install logstash-output-gelf`.


This output generates messages in GELF format. This is most useful if you
want to use Logstash to output events to Graylog2.

More information at http://graylog2.org/gelf#specs[The Graylog2 GELF specs page]

&nbsp;

==== Synopsis

This plugin supports the following configuration options:

Required configuration options:

[source,json]
--------------------------
gelf {
    host => ...
}
--------------------------



Available configuration options:

[cols="<,<,<,<m",options="header",]
|=======================================================================
|Setting |Input type|Required|Default value
| <<plugins-outputs-gelf-chunksize>> |<<number,number>>|No|`1420`
| <<plugins-outputs-gelf-codec>> |<<codec,codec>>|No|`"plain"`
| <<plugins-outputs-gelf-custom_fields>> |<<hash,hash>>|No|`{}`
| <<plugins-outputs-gelf-enable_metric>> |<<boolean,boolean>>|No|`true`
| <<plugins-outputs-gelf-full_message>> |<<string,string>>|No|`"%{message}"`
| <<plugins-outputs-gelf-host>> |<<string,string>>|Yes|
| <<plugins-outputs-gelf-id>> |<<string,string>>|No|
| <<plugins-outputs-gelf-ignore_metadata>> |<<array,array>>|No|`["@timestamp", "@version", "severity", "host", "source_host", "source_path", "short_message"]`
| <<plugins-outputs-gelf-level>> |<<array,array>>|No|`["%{severity}", "INFO"]`
| <<plugins-outputs-gelf-port>> |<<number,number>>|No|`12201`
| <<plugins-outputs-gelf-sender>> |<<string,string>>|No|`"%{host}"`
| <<plugins-outputs-gelf-ship_metadata>> |<<boolean,boolean>>|No|`true`
| <<plugins-outputs-gelf-ship_tags>> |<<boolean,boolean>>|No|`true`
| <<plugins-outputs-gelf-short_message>> |<<string,string>>|No|`"short_message"`
| <<plugins-outputs-gelf-workers>> |<<,>>|No|`1`
|=======================================================================


==== Details

&nbsp;

[[plugins-outputs-gelf-chunksize]]
===== `chunksize` 

  * Value type is <<number,number>>
  * Default value is `1420`

The GELF chunksize. You usually don't need to change this.

[[plugins-outputs-gelf-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"plain"`

The codec used for output data. Output codecs are a convenient method for encoding your data before it leaves the output, without needing a separate filter in your Logstash pipeline.

[[plugins-outputs-gelf-custom_fields]]
===== `custom_fields` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

The GELF custom field mappings. GELF supports arbitrary attributes as custom
fields. This exposes that. Exclude the `_` portion of the field name
e.g. `custom_fields => ['foo_field', 'some_value']`
sets `_foo_field` = `some_value`.

[[plugins-outputs-gelf-enable_metric]]
===== `enable_metric` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Disable or enable metric logging for this specific plugin instance
by default we record all the metrics we can, but you can disable metrics collection
for a specific plugin.

[[plugins-outputs-gelf-full_message]]
===== `full_message` 

  * Value type is <<string,string>>
  * Default value is `"%{message}"`

The GELF full message. Dynamic values like `%{foo}` are permitted here.

[[plugins-outputs-gelf-host]]
===== `host` 

  * This is a required setting.
  * Value type is <<string,string>>
  * There is no default value for this setting.

Graylog2 server IP address or hostname.

[[plugins-outputs-gelf-id]]
===== `id` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a unique `ID` to the plugin instance, this `ID` is used for tracking
information for a specific configuration of the plugin.

```
output {
 stdout {
   id => "ABC"
 }
}
```

If you don't explicitely set this variable Logstash will generate a unique name.

[[plugins-outputs-gelf-ignore_metadata]]
===== `ignore_metadata` 

  * Value type is <<array,array>>
  * Default value is `["@timestamp", "@version", "severity", "host", "source_host", "source_path", "short_message"]`

Ignore these fields when `ship_metadata` is set. Typically this lists the
fields used in dynamic values for GELF fields.

[[plugins-outputs-gelf-level]]
===== `level` 

  * Value type is <<array,array>>
  * Default value is `["%{severity}", "INFO"]`

The GELF message level. Dynamic values like `%{level}` are permitted here;
useful if you want to parse the 'log level' from an event and use that
as the GELF level/severity.

Values here can be integers [0..7] inclusive or any of
"debug", "info", "warn", "error", "fatal" (case insensitive).
Single-character versions of these are also valid, "d", "i", "w", "e", "f",
"u"
The following additional severity\_labels from Logstash's  syslog\_pri filter
are accepted: "emergency", "alert", "critical",  "warning", "notice", and
"informational".

[[plugins-outputs-gelf-port]]
===== `port` 

  * Value type is <<number,number>>
  * Default value is `12201`

Graylog2 server port number.

[[plugins-outputs-gelf-sender]]
===== `sender` 

  * Value type is <<string,string>>
  * Default value is `"%{host}"`

Allow overriding of the GELF `sender` field. This is useful if you
want to use something other than the event's source host as the
"sender" of an event. A common case for this is using the application name
instead of the hostname.

[[plugins-outputs-gelf-ship_metadata]]
===== `ship_metadata` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Should Logstash ship metadata within event object? This will cause Logstash
to ship any fields in the event (such as those created by grok) in the GELF
messages. These will be sent as underscored "additional fields".

[[plugins-outputs-gelf-ship_tags]]
===== `ship_tags` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Ship tags within events. This will cause Logstash to ship the tags of an
event as the field `\_tags`.

[[plugins-outputs-gelf-short_message]]
===== `short_message` 

  * Value type is <<string,string>>
  * Default value is `"short_message"`

The GELF short message field name. If the field does not exist or is empty,
the event message is taken instead.

[[plugins-outputs-gelf-workers]]
===== `workers` 

  * Value type is <<string,string>>
  * Default value is `1`

TODO remove this in Logstash 6.0
when we no longer support the :legacy type
This is hacky, but it can only be herne


