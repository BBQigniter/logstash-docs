[[plugins-outputs-tcp]]
=== tcp

* Version: 4.0.0
* Released on: September 13, 2016
* https://github.com/logstash-plugins/logstash-output-tcp/blob/master/CHANGELOG.md#400[Changelog]



==== Getting Help

For questions about the plugin, open a topic in the http://discuss.elastic.co[Discuss] forums. For bugs or feature requests, open an issue in https://github.com/elastic/logstash[Github].
For the list of Elastic supported plugins, please consult the https://www.elastic.co/support/matrix#show_logstash_plugins[Elastic Support Matrix].

==== Description

Write events over a TCP socket.

Each event json is separated by a newline.

Can either accept connections from clients or connect to a server,
depending on `mode`.

&nbsp;

==== Synopsis

This plugin supports the following configuration options:

Required configuration options:

[source,json]
--------------------------
tcp {
    host => ...
    port => ...
}
--------------------------



Available configuration options:

[cols="<,<,<",options="header",]
|=======================================================================
|Setting |Input type|Required
| <<plugins-outputs-tcp-codec>> |<<codec,codec>>|No
| <<plugins-outputs-tcp-enable_metric>> |<<boolean,boolean>>|No
| <<plugins-outputs-tcp-host>> |<<string,string>>|Yes
| <<plugins-outputs-tcp-id>> |<<string,string>>|No
| <<plugins-outputs-tcp-mode>> |<<string,string>>, one of `["server", "client"]`|No
| <<plugins-outputs-tcp-port>> |<<number,number>>|Yes
| <<plugins-outputs-tcp-reconnect_interval>> |<<number,number>>|No
| <<plugins-outputs-tcp-ssl_cacert>> |a valid filesystem path|No
| <<plugins-outputs-tcp-ssl_cert>> |a valid filesystem path|No
| <<plugins-outputs-tcp-ssl_enable>> |<<boolean,boolean>>|No
| <<plugins-outputs-tcp-ssl_key>> |a valid filesystem path|No
| <<plugins-outputs-tcp-ssl_key_passphrase>> |<<password,password>>|No
| <<plugins-outputs-tcp-ssl_verify>> |<<boolean,boolean>>|No
| <<plugins-outputs-tcp-workers>> |<<,>>|No
|=======================================================================


==== Details

&nbsp;

[[plugins-outputs-tcp-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"plain"`

The codec used for output data. Output codecs are a convenient method for encoding your data before it leaves the output, without needing a separate filter in your Logstash pipeline.

[[plugins-outputs-tcp-enable_metric]]
===== `enable_metric` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Disable or enable metric logging for this specific plugin instance
by default we record all the metrics we can, but you can disable metrics collection
for a specific plugin.

[[plugins-outputs-tcp-host]]
===== `host` 

  * This is a required setting.
  * Value type is <<string,string>>
  * There is no default value for this setting.

When mode is `server`, the address to listen on.
When mode is `client`, the address to connect to.

[[plugins-outputs-tcp-id]]
===== `id` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a unique `ID` to the plugin configuration. If no ID is specified, Logstash will generate one. 
It is strongly recommended to set this ID in your configuration. This is particulary useful 
when you have two or more plugins of the same type, for example, if you have 2 grok filters. 
Adding a named ID in this case will help in monitoring Logstash when using the monitoring APIs.

[source,ruby]
---------------------------------------------------------------------------------------------------
output {
 stdout {
   id => "my_plugin_id"
 }
}
---------------------------------------------------------------------------------------------------


[[plugins-outputs-tcp-message_format]]
===== `message_format`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<string,string>>
  * There is no default value for this setting.

The format to use when writing events to the file. This value
supports any string and can include `%{name}` and other dynamic
strings.

If this setting is omitted, the full json representation of the
event will be written as a single line.

[[plugins-outputs-tcp-mode]]
===== `mode` 

  * Value can be any of: `server`, `client`
  * Default value is `"client"`

Mode to operate in. `server` listens for client connections,
`client` connects to a server.

[[plugins-outputs-tcp-port]]
===== `port` 

  * This is a required setting.
  * Value type is <<number,number>>
  * There is no default value for this setting.

When mode is `server`, the port to listen on.
When mode is `client`, the port to connect to.

[[plugins-outputs-tcp-reconnect_interval]]
===== `reconnect_interval` 

  * Value type is <<number,number>>
  * Default value is `10`

When connect failed,retry interval in sec.

[[plugins-outputs-tcp-ssl_cacert]]
===== `ssl_cacert` 

  * Value type is <<path,path>>
  * There is no default value for this setting.

The SSL CA certificate, chainfile or CA path. The system CA path is automatically included.

[[plugins-outputs-tcp-ssl_cert]]
===== `ssl_cert` 

  * Value type is <<path,path>>
  * There is no default value for this setting.

SSL certificate path

[[plugins-outputs-tcp-ssl_enable]]
===== `ssl_enable` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Enable SSL (must be set for other `ssl_` options to take effect).

[[plugins-outputs-tcp-ssl_key]]
===== `ssl_key` 

  * Value type is <<path,path>>
  * There is no default value for this setting.

SSL key path

[[plugins-outputs-tcp-ssl_key_passphrase]]
===== `ssl_key_passphrase` 

  * Value type is <<password,password>>
  * Default value is `nil`

SSL key passphrase

[[plugins-outputs-tcp-ssl_verify]]
===== `ssl_verify` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Verify the identity of the other end of the SSL connection against the CA.
For input, sets the field `sslsubject` to that of the client certificate.

[[plugins-outputs-tcp-workers]]
===== `workers` 

  * Value type is <<string,string>>
  * Default value is `1`

TODO remove this in Logstash 6.0
when we no longer support the :legacy type
This is hacky, but it can only be herne


