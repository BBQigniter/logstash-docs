[[plugins-outputs-metriccatcher]]
=== metriccatcher

* Version: 3.0.0
* Released on: 2016-09-10
* https://github.com/logstash-plugins/logstash-output-metriccatcher/blob/master/CHANGELOG.md#300[Changelog]
* Compatible: 5.1.1.1, 5.0.0, 2.4.1, 2.4.0, 2.3.4


NOTE: This plugin does not ship with Logstash by default, but it is easy to install by running `bin/logstash-plugin install logstash-output-metriccatcher`.


This output ships metrics to MetricCatcher, allowing you to
utilize Coda Hale's Metrics.

More info on MetricCatcher: https://github.com/clearspring/MetricCatcher

At Clearspring, we use it to count the response codes from Apache logs:
[source,ruby]
    metriccatcher {
        host => "localhost"
        port => "1420"
        type => "apache-access"
        fields => [ "response" ]
        meter => {
            "%{host}.apache.response.%{response}" => "1"
            }
    }

&nbsp;

==== Synopsis

This plugin supports the following configuration options:

Required configuration options:

[source,json]
--------------------------
metriccatcher {
}
--------------------------



Available configuration options:

[cols="<,<,<,<m",options="header",]
|=======================================================================
|Setting |Input type|Required|Default value
| <<plugins-outputs-metriccatcher-biased>> |<<hash,hash>>|No|
| <<plugins-outputs-metriccatcher-codec>> |<<codec,codec>>|No|`"plain"`
| <<plugins-outputs-metriccatcher-counter>> |<<hash,hash>>|No|
| <<plugins-outputs-metriccatcher-enable_metric>> |<<boolean,boolean>>|No|`true`
| <<plugins-outputs-metriccatcher-gauge>> |<<hash,hash>>|No|
| <<plugins-outputs-metriccatcher-host>> |<<string,string>>|No|`"localhost"`
| <<plugins-outputs-metriccatcher-id>> |<<string,string>>|No|
| <<plugins-outputs-metriccatcher-meter>> |<<hash,hash>>|No|
| <<plugins-outputs-metriccatcher-port>> |<<number,number>>|No|`1420`
| <<plugins-outputs-metriccatcher-timer>> |<<hash,hash>>|No|
| <<plugins-outputs-metriccatcher-uniform>> |<<hash,hash>>|No|
| <<plugins-outputs-metriccatcher-workers>> |<<,>>|No|`1`
|=======================================================================


==== Details

&nbsp;

[[plugins-outputs-metriccatcher-biased]]
===== `biased` 

  * Value type is <<hash,hash>>
  * There is no default value for this setting.

The metrics to send. This supports dynamic strings like `%{host}`
for metric names and also for values. This is a hash field with key
of the metric name, value of the metric value.

The value will be coerced to a floating point value. Values which cannot be
coerced will zero (0)

[[plugins-outputs-metriccatcher-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"plain"`

The codec used for output data. Output codecs are a convenient method for encoding your data before it leaves the output, without needing a separate filter in your Logstash pipeline.

[[plugins-outputs-metriccatcher-counter]]
===== `counter` 

  * Value type is <<hash,hash>>
  * There is no default value for this setting.

The metrics to send. This supports dynamic strings like `%{host}`
for metric names and also for values. This is a hash field with key
of the metric name, value of the metric value. Example:
[source,ruby]
  counter => { "%{host}.apache.hits.%{response} => "1" }

The value will be coerced to a floating point value. Values which cannot be
coerced will zero (0)

[[plugins-outputs-metriccatcher-enable_metric]]
===== `enable_metric` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Disable or enable metric logging for this specific plugin instance
by default we record all the metrics we can, but you can disable metrics collection
for a specific plugin.

[[plugins-outputs-metriccatcher-gauge]]
===== `gauge` 

  * Value type is <<hash,hash>>
  * There is no default value for this setting.

The metrics to send. This supports dynamic strings like `%{host}`
for metric names and also for values. This is a hash field with key
of the metric name, value of the metric value.

The value will be coerced to a floating point value. Values which cannot be
coerced will zero (0)

[[plugins-outputs-metriccatcher-host]]
===== `host` 

  * Value type is <<string,string>>
  * Default value is `"localhost"`

The address of the MetricCatcher

[[plugins-outputs-metriccatcher-id]]
===== `id` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a unique `ID` to the plugin instance, this `ID` is used for tracking
information for a specific configuration of the plugin.

```
output {
 stdout {
   id => "ABC"
 }
}
```

If you don't explicitely set this variable Logstash will generate a unique name.

[[plugins-outputs-metriccatcher-meter]]
===== `meter` 

  * Value type is <<hash,hash>>
  * There is no default value for this setting.

The metrics to send. This supports dynamic strings like `%{host}`
for metric names and also for values. This is a hash field with key
of the metric name, value of the metric value.

The value will be coerced to a floating point value. Values which cannot be
coerced will zero (0)

[[plugins-outputs-metriccatcher-port]]
===== `port` 

  * Value type is <<number,number>>
  * Default value is `1420`

The port to connect on your MetricCatcher

[[plugins-outputs-metriccatcher-timer]]
===== `timer` 

  * Value type is <<hash,hash>>
  * There is no default value for this setting.

The metrics to send. This supports dynamic strings like %{host}
for metric names and also for values. This is a hash field with key
of the metric name, value of the metric value. Example:
[source,ruby]
  timer => { "%{host}.apache.response_time => "%{response_time}" }

The value will be coerced to a floating point value. Values which cannot be
coerced will zero (0)

[[plugins-outputs-metriccatcher-uniform]]
===== `uniform` 

  * Value type is <<hash,hash>>
  * There is no default value for this setting.

The metrics to send. This supports dynamic strings like `%{host}`
for metric names and also for values. This is a hash field with key
of the metric name, value of the metric value.

The value will be coerced to a floating point value. Values which cannot be
coerced will zero (0)

[[plugins-outputs-metriccatcher-workers]]
===== `workers` 

  * Value type is <<string,string>>
  * Default value is `1`

TODO remove this in Logstash 6.0
when we no longer support the :legacy type
This is hacky, but it can only be herne


