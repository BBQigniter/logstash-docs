[[plugins-outputs-file]]
=== file

* Version: 4.0.1
* Released on: September 15, 2016
* https://github.com/logstash-plugins/logstash-output-file/blob/master/CHANGELOG.md#401[Changelog]



==== Getting Help

For questions about the plugin, open a topic in the http://discuss.elastic.co[Discuss] forums. For bugs or feature requests, open an issue in https://github.com/elastic/logstash[Github].
For the list of Elastic supported plugins, please consult the https://www.elastic.co/support/matrix#show_logstash_plugins[Elastic Support Matrix].

==== Description

This output writes events to files on disk. You can use fields
from the event as parts of the filename and/or path.

By default, this output writes one event per line in **json** format.
You can customise the line format using the `line` codec like
[source,ruby]
output {
 file {
   path => ...
   codec => line { format => "custom format: %{message}"}
 }
}

&nbsp;

==== Synopsis

This plugin supports the following configuration options:

Required configuration options:

[source,json]
--------------------------
file {
    path => ...
}
--------------------------



Available configuration options:

[cols="<,<,<",options="header",]
|=======================================================================
|Setting |Input type|Required
| <<plugins-outputs-file-codec>> |<<codec,codec>>|No
| <<plugins-outputs-file-create_if_deleted>> |<<boolean,boolean>>|No
| <<plugins-outputs-file-dir_mode>> |<<number,number>>|No
| <<plugins-outputs-file-enable_metric>> |<<boolean,boolean>>|No
| <<plugins-outputs-file-file_mode>> |<<number,number>>|No
| <<plugins-outputs-file-filename_failure>> |<<string,string>>|No
| <<plugins-outputs-file-flush_interval>> |<<number,number>>|No
| <<plugins-outputs-file-gzip>> |<<boolean,boolean>>|No
| <<plugins-outputs-file-id>> |<<string,string>>|No
| <<plugins-outputs-file-path>> |<<string,string>>|Yes
| <<plugins-outputs-file-workers>> |<<,>>|No
|=======================================================================


==== Details

&nbsp;

[[plugins-outputs-file-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"plain"`

The codec used for output data. Output codecs are a convenient method for encoding your data before it leaves the output, without needing a separate filter in your Logstash pipeline.

[[plugins-outputs-file-create_if_deleted]]
===== `create_if_deleted` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

If the configured file is deleted, but an event is handled by the plugin, 
the plugin will recreate the file. Default => true

[[plugins-outputs-file-dir_mode]]
===== `dir_mode` 

  * Value type is <<number,number>>
  * Default value is `-1`

Dir access mode to use. Note that due to the bug in jruby system umask
is ignored on linux: https://github.com/jruby/jruby/issues/3426
Setting it to -1 uses default OS value.
Example: `"dir_mode" => 0750`

[[plugins-outputs-file-enable_metric]]
===== `enable_metric` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Disable or enable metric logging for this specific plugin instance
by default we record all the metrics we can, but you can disable metrics collection
for a specific plugin.

[[plugins-outputs-file-file_mode]]
===== `file_mode` 

  * Value type is <<number,number>>
  * Default value is `-1`

File access mode to use. Note that due to the bug in jruby system umask
is ignored on linux: https://github.com/jruby/jruby/issues/3426
Setting it to -1 uses default OS value.
Example: `"file_mode" => 0640`

[[plugins-outputs-file-filename_failure]]
===== `filename_failure` 

  * Value type is <<string,string>>
  * Default value is `"_filepath_failures"`

If the generated path is invalid, the events will be saved
into this file and inside the defined path.

[[plugins-outputs-file-flush_interval]]
===== `flush_interval` 

  * Value type is <<number,number>>
  * Default value is `2`

Flush interval (in seconds) for flushing writes to log files.
0 will flush on every message.

[[plugins-outputs-file-gzip]]
===== `gzip` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Gzip the output stream before writing to disk.

[[plugins-outputs-file-id]]
===== `id` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a unique `ID` to the plugin configuration. If no ID is specified, Logstash will generate one. 
It is strongly recommended to set this ID in your configuration. This is particulary useful 
when you have two or more plugins of the same type, for example, if you have 2 grok filters. 
Adding a named ID in this case will help in monitoring Logstash when using the monitoring APIs.

[source,ruby]
---------------------------------------------------------------------------------------------------
output {
 stdout {
   id => "my_plugin_id"
 }
}
---------------------------------------------------------------------------------------------------


[[plugins-outputs-file-path]]
===== `path` 

  * This is a required setting.
  * Value type is <<string,string>>
  * There is no default value for this setting.

The path to the file to write. Event fields can be used here,
like `/var/log/logstash/%{host}/%{application}`
One may also utilize the path option for date-based log
rotation via the joda time format. This will use the event
timestamp.
E.g.: `path => "./test-%{+YYYY-MM-dd}.txt"` to create
`./test-2013-05-29.txt`

If you use an absolute path you cannot start with a dynamic string.
E.g: `/%{myfield}/`, `/test-%{myfield}/` are not valid paths

[[plugins-outputs-file-workers]]
===== `workers` 

  * Value type is <<string,string>>
  * Default value is `1`

TODO remove this in Logstash 6.0
when we no longer support the :legacy type
This is hacky, but it can only be herne


