[[plugins-codecs-es_bulk]]
=== es_bulk

* Version: 3.0.3
* Released on: 2016-11-17
* https://github.com/logstash-plugins/logstash-codec-es_bulk/blob/master/CHANGELOG.md#303[Changelog]



This codec will decode the http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-bulk.html[Elasticsearch bulk format]
into individual events, plus metadata into the `@metadata` field.

Encoding is not supported at this time as the Elasticsearch
output submits Logstash events in bulk format.

&nbsp;

==== Synopsis

This plugin supports the following configuration options:

Required configuration options:

[source,json]
--------------------------
es_bulk {
  }
--------------------------



Available configuration options:

[cols="<,<,<,<m",options="header",]
|=======================================================================
|Setting |Input type|Required|Default value
| <<plugins-codecs-es_bulk-enable_metric>> |<<boolean,boolean>>|No|`true`
| <<plugins-codecs-es_bulk-id>> |<<string,string>>|No|
|=======================================================================


==== Details

&nbsp;

[[plugins-codecs-es_bulk-enable_metric]]
===== `enable_metric` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Disable or enable metric logging for this specific plugin instance
by default we record all the metrics we can, but you can disable metrics collection
for a specific plugin.

[[plugins-codecs-es_bulk-id]]
===== `id` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a unique `ID` to the plugin configuration. If no ID is specified, Logstash will generate one. 
It is strongly recommended to set this ID in your configuration. This is particularly useful 
when you have two or more plugins of the same type, for example, if you have 2 grok filters. 
Adding a named ID in this case will help in monitoring Logstash when using the monitoring APIs.

[source,ruby]
---------------------------------------------------------------------------------------------------
output {
 stdout {
   id => "my_plugin_id"
 }
}
---------------------------------------------------------------------------------------------------



