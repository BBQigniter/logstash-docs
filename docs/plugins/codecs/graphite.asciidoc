[[plugins-codecs-graphite]]
=== graphite

* Version: 3.0.2
* Released on: 2016-07-14
* https://github.com/logstash-plugins/logstash-codec-graphite/blob/master/CHANGELOG.md#302[Changelog]



This codec will encode and decode Graphite formated lines.

&nbsp;

==== Synopsis

This plugin supports the following configuration options:

Required configuration options:

[source,json]
--------------------------
graphite {
  }
--------------------------



Available configuration options:

[cols="<,<,<,<m",options="header",]
|=======================================================================
|Setting |Input type|Required|Default value
| <<plugins-codecs-graphite-enable_metric>> |<<boolean,boolean>>|No|`true`
| <<plugins-codecs-graphite-exclude_metrics>> |<<array,array>>|No|`["%{[^}]+}"]`
| <<plugins-codecs-graphite-fields_are_metrics>> |<<boolean,boolean>>|No|`false`
| <<plugins-codecs-graphite-id>> |<<string,string>>|No|
| <<plugins-codecs-graphite-include_metrics>> |<<array,array>>|No|`[".*"]`
| <<plugins-codecs-graphite-metrics>> |<<hash,hash>>|No|`{}`
| <<plugins-codecs-graphite-metrics_format>> |<<string,string>>|No|`"*"`
|=======================================================================


==== Details

&nbsp;

[[plugins-codecs-graphite-enable_metric]]
===== `enable_metric` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Disable or enable metric logging for this specific plugin instance
by default we record all the metrics we can, but you can disable metrics collection
for a specific plugin.

[[plugins-codecs-graphite-exclude_metrics]]
===== `exclude_metrics` 

  * Value type is <<array,array>>
  * Default value is `["%{[^}]+}"]`

Exclude regex matched metric names, by default exclude unresolved %{field} strings

[[plugins-codecs-graphite-fields_are_metrics]]
===== `fields_are_metrics` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Indicate that the event @fields should be treated as metrics and will be sent as is to graphite

[[plugins-codecs-graphite-id]]
===== `id` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a unique `ID` to the plugin configuration. If no ID is specified, Logstash will generate one. 
It is strongly recommended to set this ID in your configuration. This is particularly useful 
when you have two or more plugins of the same type, for example, if you have 2 grok filters. 
Adding a named ID in this case will help in monitoring Logstash when using the monitoring APIs.

[source,ruby]
---------------------------------------------------------------------------------------------------
output {
 stdout {
   id => "my_plugin_id"
 }
}
---------------------------------------------------------------------------------------------------


[[plugins-codecs-graphite-include_metrics]]
===== `include_metrics` 

  * Value type is <<array,array>>
  * Default value is `[".*"]`

Include only regex matched metric names

[[plugins-codecs-graphite-metrics]]
===== `metrics` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

The metric(s) to use. This supports dynamic strings like `%{host}`
for metric names and also for values. This is a hash field with key
of the metric name, value of the metric value. Example:
[source,ruby]
    [ "%{host}/uptime", "%{uptime_1m}" ]

The value will be coerced to a floating point value. Values which cannot be
coerced will zero (0)

[[plugins-codecs-graphite-metrics_format]]
===== `metrics_format` 

  * Value type is <<string,string>>
  * Default value is `"*"`

Defines format of the metric string. The placeholder `*` will be
replaced with the name of the actual metric.
[source,ruby]
    metrics_format => "foo.bar.*.sum"

NOTE: If no metrics_format is defined the name of the metric will be used as fallback.


