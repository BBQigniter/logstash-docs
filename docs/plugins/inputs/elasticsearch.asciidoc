[[plugins-inputs-elasticsearch]]
=== elasticsearch

* Version: 4.0.0
* Released on: 2016-10-13
* https://github.com/logstash-plugins/logstash-input-elasticsearch/blob/master/CHANGELOG.md#400[Changelog]
* Compatible: 5.1.1.1, 5.0.0, 2.4.1, 2.4.0, 2.3.4



Read from an Elasticsearch cluster, based on search query results.
This is useful for replaying test logs, reindexing, etc.

Example:
[source,ruby]
    input {
      # Read all documents from Elasticsearch matching the given query
      elasticsearch {
        hosts => "localhost"
        query => '{ "query": { "match": { "statuscode": 200 } }, "sort": [ "_doc" ] }'
      }
    }

This would create an Elasticsearch query with the following format:
[source,json]
    curl 'http://localhost:9200/logstash-*/_search?&scroll=1m&size=1000' -d '{
      "query": {
        "match": {
          "statuscode": 200
        }
      },
      "sort": [ "_doc" ]
    }'


&nbsp;

==== Synopsis

This plugin supports the following configuration options:

Required configuration options:

[source,json]
--------------------------
elasticsearch {
}
--------------------------



Available configuration options:

[cols="<,<,<,<m",options="header",]
|=======================================================================
|Setting |Input type|Required|Default value
| <<plugins-inputs-elasticsearch-add_field>> |<<hash,hash>>|No|`{}`
| <<plugins-inputs-elasticsearch-ca_file>> |a valid filesystem path|No|
| <<plugins-inputs-elasticsearch-codec>> |<<codec,codec>>|No|`"plain"`
| <<plugins-inputs-elasticsearch-docinfo>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-elasticsearch-docinfo_fields>> |<<array,array>>|No|`["_index", "_type", "_id"]`
| <<plugins-inputs-elasticsearch-docinfo_target>> |<<string,string>>|No|`"@metadata"`
| <<plugins-inputs-elasticsearch-enable_metric>> |<<boolean,boolean>>|No|`true`
| <<plugins-inputs-elasticsearch-hosts>> |<<array,array>>|No|
| <<plugins-inputs-elasticsearch-id>> |<<string,string>>|No|
| <<plugins-inputs-elasticsearch-index>> |<<string,string>>|No|`"logstash-*"`
| <<plugins-inputs-elasticsearch-password>> |<<password,password>>|No|
| <<plugins-inputs-elasticsearch-query>> |<<string,string>>|No|`"{ \"sort\": [ \"_doc\" ] }"`
| <<plugins-inputs-elasticsearch-scroll>> |<<string,string>>|No|`"1m"`
| <<plugins-inputs-elasticsearch-size>> |<<number,number>>|No|`1000`
| <<plugins-inputs-elasticsearch-ssl>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-elasticsearch-tags>> |<<array,array>>|No|
| <<plugins-inputs-elasticsearch-type>> |<<string,string>>|No|
| <<plugins-inputs-elasticsearch-user>> |<<string,string>>|No|
|=======================================================================


==== Details

&nbsp;

[[plugins-inputs-elasticsearch-add_field]]
===== `add_field` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

Add a field to an event

[[plugins-inputs-elasticsearch-ca_file]]
===== `ca_file` 

  * Value type is <<path,path>>
  * There is no default value for this setting.

SSL Certificate Authority file

[[plugins-inputs-elasticsearch-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"plain"`

The codec used for input data. Input codecs are a convenient method for decoding your data before it enters the input, without needing a separate filter in your Logstash pipeline.

[[plugins-inputs-elasticsearch-docinfo]]
===== `docinfo` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

If set, include Elasticsearch document information such as index, type, and
the id in the event.

It might be important to note, with regards to metadata, that if you're
ingesting documents with the intent to re-index them (or just update them)
that the `action` option in the elasticsearch output wants to know how to
handle those things. It can be dynamically assigned with a field
added to the metadata.

Example
[source, ruby]
    input {
      elasticsearch {
        hosts => "es.production.mysite.org"
        index => "mydata-2018.09.*"
        query => "*"
        size => 500
        scroll => "5m"
        docinfo => true
      }
    }
    output {
      elasticsearch {
        index => "copy-of-production.%{[@metadata][_index]}"
        index_type => "%{[@metadata][_type]}"
        document_id => "%{[@metadata][_id]}"
      }
    }


[[plugins-inputs-elasticsearch-docinfo_fields]]
===== `docinfo_fields` 

  * Value type is <<array,array>>
  * Default value is `["_index", "_type", "_id"]`

List of document metadata to move to the `docinfo_target` field
To learn more about Elasticsearch metadata fields read
http://www.elasticsearch.org/guide/en/elasticsearch/guide/current/_document_metadata.html

[[plugins-inputs-elasticsearch-docinfo_target]]
===== `docinfo_target` 

  * Value type is <<string,string>>
  * Default value is `"@metadata"`

Where to move the Elasticsearch document information by default we use the @metadata field.

[[plugins-inputs-elasticsearch-enable_metric]]
===== `enable_metric` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Disable or enable metric logging for this specific plugin instance
by default we record all the metrics we can, but you can disable metrics collection
for a specific plugin.

[[plugins-inputs-elasticsearch-hosts]]
===== `hosts` 

  * Value type is <<array,array>>
  * There is no default value for this setting.

List of elasticsearch hosts to use for querying.
each host can be either IP, HOST, IP:port or HOST:port
port defaults to 9200

[[plugins-inputs-elasticsearch-id]]
===== `id` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a unique `ID` to the plugin instance, this `ID` is used for tracking
information for a specific configuration of the plugin.

```
output {
 stdout {
   id => "ABC"
 }
}
```

If you don't explicitely set this variable Logstash will generate a unique name.

[[plugins-inputs-elasticsearch-index]]
===== `index` 

  * Value type is <<string,string>>
  * Default value is `"logstash-*"`

The index or alias to search.

[[plugins-inputs-elasticsearch-password]]
===== `password` 

  * Value type is <<password,password>>
  * There is no default value for this setting.

Basic Auth - password

[[plugins-inputs-elasticsearch-query]]
===== `query` 

  * Value type is <<string,string>>
  * Default value is `"{ \"sort\": [ \"_doc\" ] }"`

The query to be executed. Read the Elasticsearch query DSL documentation
for more info
https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html

[[plugins-inputs-elasticsearch-scroll]]
===== `scroll` 

  * Value type is <<string,string>>
  * Default value is `"1m"`

This parameter controls the keepalive time in seconds of the scrolling
request and initiates the scrolling process. The timeout applies per
round trip (i.e. between the previous scroll request, to the next).

[[plugins-inputs-elasticsearch-size]]
===== `size` 

  * Value type is <<number,number>>
  * Default value is `1000`

This allows you to set the maximum number of hits returned per scroll.

[[plugins-inputs-elasticsearch-ssl]]
===== `ssl` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

SSL

[[plugins-inputs-elasticsearch-tags]]
===== `tags` 

  * Value type is <<array,array>>
  * There is no default value for this setting.

Add any number of arbitrary tags to your event.

This can help with processing later.

[[plugins-inputs-elasticsearch-type]]
===== `type` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a `type` field to all events handled by this input.

Types are used mainly for filter activation.

The type is stored as part of the event itself, so you can
also use the type to search for it in Kibana.

If you try to set a type on an event that already has one (for
example when you send an event from a shipper to an indexer) then
a new input will not override the existing type. A type set at
the shipper stays with that event for its life even
when sent to another Logstash server.

[[plugins-inputs-elasticsearch-user]]
===== `user` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Basic Auth - username


