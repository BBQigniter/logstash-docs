[[plugins-inputs-xmpp]]
=== xmpp

* Version: 3.1.1
* Released on: 2016-07-14
* https://github.com/logstash-plugins/logstash-input-xmpp/blob/master/CHANGELOG.md#311[Changelog]
* Compatible: 5.1.1.1, 5.0.0, 2.4.1, 2.4.0, 2.3.4



load the MUC Client anyway, its mocked in testing
This input allows you to receive events over XMPP/Jabber.

This plugin can be used for accepting events from humans or applications
XMPP, or you can use it for PubSub or general message passing for logstash to
logstash.

&nbsp;

==== Synopsis

This plugin supports the following configuration options:

Required configuration options:

[source,json]
--------------------------
xmpp {
    password => ...
    user => ...
}
--------------------------



Available configuration options:

[cols="<,<,<,<m",options="header",]
|=======================================================================
|Setting |Input type|Required|Default value
| <<plugins-inputs-xmpp-add_field>> |<<hash,hash>>|No|`{}`
| <<plugins-inputs-xmpp-codec>> |<<codec,codec>>|No|`"plain"`
| <<plugins-inputs-xmpp-enable_metric>> |<<boolean,boolean>>|No|`true`
| <<plugins-inputs-xmpp-host>> |<<string,string>>|No|
| <<plugins-inputs-xmpp-id>> |<<string,string>>|No|
| <<plugins-inputs-xmpp-password>> |<<password,password>>|Yes|
| <<plugins-inputs-xmpp-rooms>> |<<array,array>>|No|
| <<plugins-inputs-xmpp-tags>> |<<array,array>>|No|
| <<plugins-inputs-xmpp-type>> |<<string,string>>|No|
| <<plugins-inputs-xmpp-user>> |<<string,string>>|Yes|
|=======================================================================


==== Details

&nbsp;

[[plugins-inputs-xmpp-add_field]]
===== `add_field` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

Add a field to an event

[[plugins-inputs-xmpp-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"plain"`

The codec used for input data. Input codecs are a convenient method for decoding your data before it enters the input, without needing a separate filter in your Logstash pipeline.

[[plugins-inputs-xmpp-enable_metric]]
===== `enable_metric` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Disable or enable metric logging for this specific plugin instance
by default we record all the metrics we can, but you can disable metrics collection
for a specific plugin.

[[plugins-inputs-xmpp-host]]
===== `host` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

The xmpp server to connect to. This is optional. If you omit this setting,
the host on the user/identity is used. (`foo.com` for `user@foo.com`)

[[plugins-inputs-xmpp-id]]
===== `id` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a unique `ID` to the plugin instance, this `ID` is used for tracking
information for a specific configuration of the plugin.

```
output {
 stdout {
   id => "ABC"
 }
}
```

If you don't explicitely set this variable Logstash will generate a unique name.

[[plugins-inputs-xmpp-password]]
===== `password` 

  * This is a required setting.
  * Value type is <<password,password>>
  * There is no default value for this setting.

The xmpp password for the user/identity.

[[plugins-inputs-xmpp-rooms]]
===== `rooms` 

  * Value type is <<array,array>>
  * There is no default value for this setting.

if muc/multi-user-chat required, give the name of the room that
you want to join: `room@conference.domain/nick`

[[plugins-inputs-xmpp-tags]]
===== `tags` 

  * Value type is <<array,array>>
  * There is no default value for this setting.

Add any number of arbitrary tags to your event.

This can help with processing later.

[[plugins-inputs-xmpp-type]]
===== `type` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a `type` field to all events handled by this input.

Types are used mainly for filter activation.

The type is stored as part of the event itself, so you can
also use the type to search for it in Kibana.

If you try to set a type on an event that already has one (for
example when you send an event from a shipper to an indexer) then
a new input will not override the existing type. A type set at
the shipper stays with that event for its life even
when sent to another Logstash server.

[[plugins-inputs-xmpp-user]]
===== `user` 

  * This is a required setting.
  * Value type is <<string,string>>
  * There is no default value for this setting.

The user or resource ID, like `foo@example.com`.


